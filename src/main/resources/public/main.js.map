{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/main/angular/app/app-routing.module.ts","./src/main/angular/app/app.component.ts","./src/main/angular/app/app.component.html","./src/main/angular/app/app.module.ts","./src/main/angular/app/model/questionnaire-response-simple.ts","./src/main/angular/environments/environment.ts","./src/main/angular/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {QuestionnaireResponseSimple} from \"./model/questionnaire-response-simple\";\nimport {IQuestionnaireResponse, IQuestionnaireResponseItemComponent} from \"./fhir\";\nimport saveAs from 'save-as';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  loading = false;\n  error: string;\n  message: string;\n  response: QuestionnaireResponseSimple = new QuestionnaireResponseSimple();\n\n  constructor(private http: HttpClient) {\n  }\n\n  submit() {\n    const questionnaireResponse: IQuestionnaireResponse = {\n      resourceType: 'QuestionnaireResponse',\n      status: 'completed',\n      questionnaire: 'http://hl7.org/fhir/us/hai/Questionnaire/hai-questionnaire-covid-19-pt-impact-hosp-capacity',\n      item: []\n    };\n\n    if (this.response.facilityId) {\n      questionnaireResponse.item.push({\n        linkId: 'facility-id',\n        text: 'Facility ID',\n        answer: [{\n          valueUri: this.response.facilityId\n        }]\n      });\n    }\n\n    if (this.response.summaryCensusId) {\n      questionnaireResponse.item.push({\n        linkId: 'summary-census-id',\n        text: 'Summary Census ID',\n        answer: [{\n          valueUri: this.response.summaryCensusId\n        }]\n      });\n    }\n\n    if (this.response.date) {\n      questionnaireResponse.item.push({\n        linkId: 'collection-date',\n        text: 'Date for which patient impact and hospital capacity counts are recorded',\n        answer: [{\n          valueDate: this.response.date\n        }]\n      });\n    }\n\n    const section1: IQuestionnaireResponseItemComponent = {\n      linkId: 'covid-19-patient-impact-group',\n      text: 'Patient Impact Section',\n      item: []\n    };\n\n    if (this.response.hasOwnProperty('hospitalized')) {\n      section1.item.push({\n        linkId: 'numC19HospPats',\n        text: 'Patients currently hospitalized in an inpatient bed who have suspected or confirmed COVID-19',\n        answer: [{\n          valueInteger: this.response.hospitalized\n        }]\n      });\n    }\n\n    if (this.response.hasOwnProperty('hospitalizedAndVentilated')) {\n      section1.item.push({\n        linkId: 'numC19MechVentPats',\n        text: 'Patients currently hospitalized in an inpatient bed who have suspected or confirmed COVID-19 and are on a mechanical ventilator',\n        answer: [{\n          valueInteger: this.response.hospitalizedAndVentilated\n        }]\n      });\n    }\n\n    if (this.response.hasOwnProperty('hospitalOnset')) {\n      section1.item.push({\n        linkId: 'covid-19-numC19HOPats',\n        text: 'Patients currently hospitalized in an inpatient bed with onset of suspected or confirmed COVID-19 fourteen or more days after hospital admission due to a condition other than COVID-19',\n        answer: [{\n          valueInteger: this.response.hospitalOnset\n        }]\n      });\n    }\n\n    if (this.response.hasOwnProperty('edOverflow')) {\n      section1.item.push({\n        linkId: 'numC19OverflowPats',\n        text: 'Patients with suspected or confirmed COVID-19 who are currently in the Emergency Department (ED) or any overflow location awaiting an inpatient bed',\n        answer: [{\n          valueInteger: this.response.edOverflow\n        }]\n      });\n    }\n\n    if (this.response.hasOwnProperty('edOverflowAndVentilated')) {\n      section1.item.push({\n        linkId: 'numC19OFMechVentPats',\n        text: 'Patients with suspected or confirmed COVID-19 who currently are in the ED or any overflow location awaiting an inpatient bed and on a mechanical ventilator',\n        answer: [{\n          valueInteger: this.response.edOverflowAndVentilated\n        }]\n      });\n    }\n\n    if (this.response.hasOwnProperty('deaths')) {\n      section1.item.push({\n        linkId: 'numC19Died',\n        text: 'Patients with suspected or confirmed COVID-19 who died in the hospital, ED or any overflow location on the date for which you are reporting',\n        answer: [{\n          valueInteger: this.response.deaths\n        }]\n      });\n    }\n\n    if (section1.item.length > 0) {\n      questionnaireResponse.item.push(section1);\n    }\n\n    const json = JSON.stringify(questionnaireResponse, null, '\\t');\n    const blob = new Blob([json], {type: 'application/json'});\n    saveAs(blob, 'questionnaireResponse.txt');\n  }\n\n  async ngOnInit() {\n    try {\n      this.loading = true;\n      this.response = await this.http.get<QuestionnaireResponseSimple>('/questionnaire-response').toPromise();\n      const keys = Object.keys(this.response);\n      for (const key of keys) {\n        if (this.response[key] === null) {\n          delete this.response[key];\n        }\n      }\n    } catch (ex) {\n      console.error('Error retrieving initial responses: ' + ex.message);\n    } finally {\n      this.loading = false;\n    }\n  }\n}\n","<div class=\"container\">\n\n  <div class=\"jumbotron\">\n    <h1>Project Flintlock</h1>\n\n    <div class=\"alert alert-danger\" *ngIf=\"error\">{{error}}</div>\n    <div class=\"alert alert-info\" *ngIf=\"message\">{{message}}</div>\n    <div class=\"alert alert-info\" *ngIf=\"loading\">Getting information from FHIR server...</div>\n\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label>Facility ID</label>\n          <input type=\"text\" class=\"form-control\" [(ngModel)]=\"response.facilityId\" [class.is-invalid]=\"!response.facilityId\" />\n        </div>\n      </div>\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label>Summary Census ID</label>\n          <input type=\"text\" class=\"form-control\" [(ngModel)]=\"response.summaryCensusId\" [class.is-invalid]=\"!response.summaryCensusId\" />\n        </div>\n      </div>\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <label>Date</label>\n          <input type=\"date\" class=\"form-control\" [(ngModel)]=\"response.date\" [class.is-invalid]=\"!response.date\" />\n          <span class=\"help-block\">For which patient impact and hospital capacity counts are reported.</span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <span>Section 1</span>\n        <p class=\"card-subtitle\">Patient Impact Data Elements</p>\n      </div>\n      <table class=\"table table-striped\">\n        <tbody>\n        <tr>\n          <td><input type=\"number\" class=\"form-control\" [(ngModel)]=\"response.hospitalized\" [class.is-invalid]=\"!response.hasOwnProperty('hospitalized')\" /></td>\n          <td><strong>HOSPITALIZED:</strong> Patients currently hospitalized in an inpatient bed who have suspected or confirmed COVID-19</td>\n        </tr>\n        <tr>\n          <td><input type=\"number\" class=\"form-control\" [(ngModel)]=\"response.hospitalizedAndVentilated\" [class.is-invalid]=\"!response.hasOwnProperty('hospitalizedAndVentilated')\" /></td>\n          <td><strong>HOSPITALIZED and VENTILATED:</strong> Patients currently hospitalized in an inpatient bed who have suspected or confirmed COVID-19 and are on a mechanical ventilator</td>\n        </tr>\n        <tr>\n          <td><input type=\"number\" class=\"form-control\" [(ngModel)]=\"response.hospitalOnset\" [class.is-invalid]=\"!response.hasOwnProperty('hospitalOnset')\" /></td>\n          <td><strong>HOSPITAL ONSET:</strong> Patients currently hospitalized in an inpatient bed with onset of suspected or confirmed COVID-19 fourteen or more days after hospital admission due to a condition other than COVID-19</td>\n        </tr>\n        <tr>\n          <td><input type=\"number\" class=\"form-control\" [(ngModel)]=\"response.edOverflow\" [class.is-invalid]=\"!response.hasOwnProperty('edOverflow')\" /></td>\n          <td><strong>ED/OVERFLOW:</strong> Patients with suspected or confirmed COVID-19 who currently are in the Emergency Department (ED) or any overflow location awaiting an inpatient bed</td>\n        </tr>\n        <tr>\n          <td><input type=\"number\" class=\"form-control\" [(ngModel)]=\"response.edOverflowAndVentilated\" [class.is-invalid]=\"!response.hasOwnProperty('edOverflowAndVentilated')\" /></td>\n          <td><strong>ED/OVERFLOW and VENTILATED:</strong> Patients with suspected or confirmed COVID-19 who currently are in the ED or any overflow location awaiting an inpatient bed and on a mechanical ventilator</td>\n        </tr>\n        <tr>\n          <td><input type=\"number\" class=\"form-control\" [(ngModel)]=\"response.deaths\" [class.is-invalid]=\"!response.hasOwnProperty('deaths')\" /></td>\n          <td><strong>DEATHS:</strong> Patients with suspected or confirmed COVID-19 who died in the hospital, ED, or any overflow location on the date for which you are reporting</td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <span>Section 2</span>\n        <p class=\"card-subtitle\">Hospital Bed/ Intensive Care Unit (ICU)/ Ventilator Capacity Data Elements</p>\n      </div>\n      <table class=\"table table-striped\">\n        <tbody>\n        <tr>\n          <td><input type=\"number\" class=\"form-control\" [(ngModel)]=\"response.allHospitalBeds\" [class.is-invalid]=\"!response.hasOwnProperty('allHospitalBeds')\" /></td>\n          <td><strong>ALL HOSPITAL BEDS:</strong> Total number of all staffed inpatient and outpatient beds in your hospital,including all overflow and surge/expansion beds used for inpatients and for outpatients (includes all ICU beds)</td>\n        </tr>\n        <tr>\n          <td><input type=\"number\" class=\"form-control\" [(ngModel)]=\"response.hospitalInpatientBeds\" [class.is-invalid]=\"!response.hasOwnProperty('hospitalInpatientBeds')\" /></td>\n          <td><strong>*HOSPITAL INPATIENT BEDS:</strong> Total number of staffed inpatient beds in your hospital including all overflow and surge/ expansion beds used for inpatients (includes all ICU beds)</td>\n        </tr>\n        <tr>\n          <td><input type=\"number\" class=\"form-control\" [(ngModel)]=\"response.hospitalInpatientBedOccupancy\" [class.is-invalid]=\"!response.hasOwnProperty('hospitalInpatientBedOccupancy')\" /></td>\n          <td><strong>HOSPITAL INPATIENT BED OCCUPANCY:</strong> Total number of staffed inpatient beds that are occupied</td>\n        </tr>\n        <tr>\n          <td><input type=\"number\" class=\"form-control\" [(ngModel)]=\"response.icuBeds\" [class.is-invalid]=\"!response.hasOwnProperty('icuBeds')\" /></td>\n          <td><strong>ICU BEDS:</strong> Total number of staffed inpatient ICU beds</td>\n        </tr>\n        <tr>\n          <td><input type=\"number\" class=\"form-control\" [(ngModel)]=\"response.icuBedOccupancy\" [class.is-invalid]=\"!response.hasOwnProperty('response.icuBedOccupancy')\" /></td>\n          <td><strong>ICU BED OCCUPANCY:</strong> Total number of staffed inpatient ICU beds that are occupied</td>\n        </tr>\n        <tr>\n          <td><input type=\"number\" class=\"form-control\" [(ngModel)]=\"response.mechanicalVentilators\" [class.is-invalid]=\"!response.hasOwnProperty('mechanicalVentilators')\" /></td>\n          <td><strong>MECHANICAL VENTILATORS:</strong> Total number of ventilators available</td>\n        </tr>\n        <tr>\n          <td><input type=\"number\" class=\"form-control\" [(ngModel)]=\"response.mechanicalVentilatorsInUse\" [class.is-invalid]=\"!response.hasOwnProperty('mechanicalVentilatorsInUse')\" /></td>\n          <td><strong>MECHANICAL VENTILATORS IN USE:</strong> Total number of ventilators in use</td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"submit()\">Submit</button>\n  </div>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {AgmCoreModule} from \"@agm/core\";\nimport {AgmOverlay, AgmOverlays} from \"agm-overlays\";\nimport {AgmJsMarkerClustererModule} from \"@agm/js-marker-clusterer\";\nimport {FormsModule} from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        NgbModule,\n        HttpClientModule,\n        AgmOverlays,\n        AgmCoreModule.forRoot({\n            apiKey: '%google.api.key%',\n            libraries: ['visualization']\n        }),\n        AgmJsMarkerClustererModule,\n        FormsModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\r\nexport class QuestionnaireResponseSimple {\r\n  facilityId: string;\r\n  summaryCensusId: string;\r\n  date: string;\r\n\r\n  hospitalized: number;\r\n  hospitalizedAndVentilated: number;\r\n  hospitalOnset: number;\r\n  edOverflow: number;\r\n  edOverflowAndVentilated: number;\r\n  deaths: number;\r\n\r\n  allHospitalBeds: number;\r\n  hospitalInpatientBeds: number;\r\n  hospitalInpatientBedOccupancy: number;\r\n  icuBeds: number;\r\n  icuBedOccupancy: number;\r\n  mechanicalVentilators: number;\r\n  mechanicalVentilatorsInUse: number;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}