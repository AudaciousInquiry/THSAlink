{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/main/angular/app/app-routing.module.ts","./src/main/angular/app/app.component.ts","./src/main/angular/app/app.component.html","./src/main/angular/app/app.module.ts","./src/main/angular/environments/environment.ts","./src/main/angular/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {environment} from \"../environments/environment\";\nimport {HttpClient} from \"@angular/common/http\";\nimport saveAs from 'save-as';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  loading = false;\n  message: string;\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  async generate(format: 'json'|'xml') {\n    let url;\n\n    switch (format) {\n      case 'json':\n        url = 'case-report-bundle.json';\n        break;\n      case 'xml':\n        url = 'case-report-bundle.xml';\n        break;\n    }\n\n    this.loading = true;\n\n    try {\n      const results = await this.http.get(url, {responseType: \"blob\"}).toPromise();\n      saveAs(results, url);\n    } catch (ex) {\n      this.message = ex.message;\n    } finally {\n      this.loading = false;\n    }\n  }\n}\n","<div class=\"container\">\n\n  <div class=\"jumbotron\">\n    <h1>Project Flintlock</h1>\n\n    <div class=\"alert alert-danger\" *ngIf=\"message\">{{message}}</div>\n\n    <div ngbDropdown class=\"d-inline-block\">\n      <button class=\"btn btn-primary\" id=\"downloadReportMenu\" ngbDropdownToggle [disabled]=\"loading\">Generate Report</button>\n      <div ngbDropdownMenu aria-labelledby=\"downloadReportMenu\">\n        <button ngbDropdownItem (click)=\"generate('json')\">JSON</button>\n        <button ngbDropdownItem (click)=\"generate('xml')\">XML</button>\n      </div>\n      <div class=\"help-block\" *ngIf=\"loading\">Generating...</div>\n    </div>\n  </div>\n\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {HttpClientModule} from \"@angular/common/http\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}