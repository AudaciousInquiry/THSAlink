{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/main/angular/app/app-routing.module.ts","./src/main/angular/app/app.component.ts","./src/main/angular/app/app.component.html","./src/main/angular/app/app.module.ts","./src/main/angular/environments/environment.ts","./src/main/angular/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport saveAs from 'save-as';\nimport {google} from 'google-maps';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  loading = false;\n  message: string;\n  loadingCount = 0;\n  data: {\n    entry: {\n      resource: {\n        entry: {\n          resource: any;\n        }[]\n      };\n    }[];\n  };\n  coordinates: {\n    latitude: number;\n    longitude: number;\n    strength: number;\n  }[];\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  onMapLoad(mapInstance: google.maps.Map) {\n    const data = [];\n\n    this.coordinates.forEach(c => {\n      for (let i = 0; i < c.strength; i++) {\n        data.push(new google.maps.LatLng(c.latitude, c.longitude));\n      }\n    });\n    new google.maps.visualization.HeatmapLayer({\n      map: <any> mapInstance,\n      data: data,\n\n    });\n  }\n\n  async download(format: 'json'|'xml') {\n    if (!this.data) return;\n\n    let content = JSON.stringify(this.data, null, '\\t');\n\n    if (format === 'xml') {\n      content = await this.http.post('/convert', content, { responseType: \"text\" }).toPromise();\n    }\n\n    const blob = new Blob([content], { type: 'text/plain;charset=utf-8'});\n    const fileName = format === 'xml' ? 'report.xml' : 'report.json';\n\n    saveAs(blob, fileName);\n  }\n\n  async loadData() {\n    this.loading = true;\n\n    let timeout: any;\n    const timeoutEvent = () => {\n      this.loadingCount = this.loadingCount + 5;\n      if (this.loadingCount > 100) {\n        this.loadingCount = 0;\n      }\n      timeout = setTimeout(timeoutEvent, 300);\n    };\n\n    try {\n      timeoutEvent();\n      this.data = <any> await this.http.get('case-report-bundle.json', {responseType: \"json\"}).toPromise();\n      this.coordinates = <any> await this.http.post('heatmap', JSON.stringify(this.data), {responseType: 'json'}).toPromise();\n      console.log(this.coordinates);\n    } catch (ex) {\n      this.message = ex.message;\n    } finally {\n      this.loading = false;\n      clearTimeout(timeout);\n    }\n  }\n\n  async ngOnInit() {\n    this.loadData();\n  }\n}\n","<div class=\"container\">\n\n  <div class=\"jumbotron\">\n    <h1>Project Flintlock</h1>\n\n    <div class=\"alert alert-danger\" *ngIf=\"message\">{{message}}</div>\n\n    <p *ngIf=\"loading\"><ngb-progressbar type=\"info\" [value]=\"loadingCount\" [striped]=\"true\">Loading...</ngb-progressbar></p>\n\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"loadData()\">Re-load Report</button>\n    <div ngbDropdown class=\"d-inline-block\">\n      <button class=\"btn btn-primary\" id=\"downloadReportMenu\" ngbDropdownToggle [disabled]=\"loading\">Download Report</button>\n      <div ngbDropdownMenu aria-labelledby=\"downloadReportMenu\">\n        <button ngbDropdownItem (click)=\"download('json')\">JSON</button>\n        <button ngbDropdownItem (click)=\"download('xml')\">XML</button>\n      </div>\n    </div>\n\n    <div *ngIf=\"!loading && data\">\n      <p>Total Electronic Case Reports: {{data.entry?.length}}</p>\n\n      <agm-map *ngIf=\"coordinates && coordinates.length > 0\" [latitude]=\"coordinates[0].latitude\" [longitude]=\"coordinates[0].longitude\" (mapReady)=\"onMapLoad($event)\"></agm-map>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {AgmCoreModule} from \"@agm/core\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    HttpClientModule,\n    AgmCoreModule.forRoot({\n      apiKey: '***REMOVED***',\n      libraries: ['visualization']\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}